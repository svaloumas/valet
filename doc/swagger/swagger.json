{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation of the valet API.",
    "title": "valet",
    "version": "0.8.0"
  },
  "host": "localhost:8080",
  "basePath": "/api",
  "paths": {
    "/jobs": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Returns all jobs, optionally filters them by status.",
        "operationId": "getJobs",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Status",
            "description": "The status of the jobs to be fetched..",
            "name": "status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getJobsResponse"
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Creates a new job.",
        "operationId": "createJobs",
        "parameters": [
          {
            "description": "Name, description and metadata of the new job to be performed.",
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RequestBodyDTO"
            }
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/responses/postJobsResponse"
          },
          "400": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/jobs/{id}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Returns a specified job.",
        "operationId": "getJob",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "The ID of the specified job.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getJobResponse"
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "jobs"
        ],
        "summary": "Deletes a specified job.",
        "operationId": "deleteJob",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "The ID of the specified job.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "patch": {
        "tags": [
          "jobs"
        ],
        "summary": "Updates a job's name or description.",
        "operationId": "patchJob",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "The ID of the specified job.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/jobs/{id}/results": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Returns a specified job's results.",
        "operationId": "getJobResults",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "The ID of the specified job.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getJobResultsResponse"
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "jobs"
        ],
        "summary": "Deletes a job's results.",
        "operationId": "deleteJobResults",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "The ID of the specified job.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/pipelines": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "summary": "Returns all pipelines, optionally filters them by status.",
        "operationId": "getPipelines",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Status",
            "description": "The status of the pipelines to be fetched..",
            "name": "status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPipelinesResponse"
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "pipelines"
        ],
        "summary": "Creates a new pipeline.",
        "operationId": "createPipelines",
        "parameters": [
          {
            "description": "Name, description and metadata of the new pipeline to be performed.",
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RequestBodyDTO"
            }
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/responses/postPipelinesResponse"
          },
          "400": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/pipelines/{id}": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "summary": "Returns a specified pipeline.",
        "operationId": "getPipeline",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "The ID of the specified pipeline.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPipelineResponse"
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "pipelines"
        ],
        "summary": "Deletes a specified pipeline.",
        "operationId": "deletePipeline",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "The ID of the specified pipeline.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      },
      "patch": {
        "tags": [
          "pipelines"
        ],
        "summary": "Updates a pipeline's name or description.",
        "operationId": "patchPipeline",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "The ID of the specified pipeline.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    },
    "/pipelines/{id}/jobs": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "summary": "Returns the jobs of the specified pipeline.",
        "operationId": "getPipelineJobs",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "The ID of the specified pipeline.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPipelineJobsResponse"
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "500": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "Duration": {
      "description": "A Duration represents the elapsed time between two instants\nas an int64 nanosecond count. The representation limits the\nlargest representable duration to approximately 290 years.",
      "type": "integer",
      "format": "int64",
      "x-go-package": "time"
    },
    "Job": {
      "type": "object",
      "title": "Job represents an async task.",
      "properties": {
        "completed_at": {
          "description": "CompletedAt is the UTC timestamp of the moment the job finished.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CompletedAt"
        },
        "created_at": {
          "description": "CreatedAt is the UTC timestamp of the job creation.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "description": {
          "description": "Description gives some information about the job.",
          "type": "string",
          "x-go-name": "Description"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "failure_reason": {
          "description": "FailureReason holds the error message that led to the job failure, if any.",
          "type": "string",
          "x-go-name": "FailureReason"
        },
        "id": {
          "description": "ID is the auto-generated job identifier in UUID4 format.",
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "description": "Name is the name of the job.",
          "type": "string",
          "x-go-name": "Name"
        },
        "next": {
          "$ref": "#/definitions/Job"
        },
        "next_job_id": {
          "description": "NextJobID is the ID of the job that should run next in the pipeline, if any.",
          "type": "string",
          "x-go-name": "NextJobID"
        },
        "pipeline_id": {
          "description": "PipelineID is the auto-generated pipeline identifier in UUID4 format.\nIt will be empty if the job does not belong to a pipeline.",
          "type": "string",
          "x-go-name": "PipelineID"
        },
        "run_at": {
          "description": "RunAt is the UTC timestamp indicating the time for the job to run.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "RunAt"
        },
        "scheduled_at": {
          "description": "ScheduledAt is the UTC timestamp indicating the time that the job got scheduled.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "ScheduledAt"
        },
        "started_at": {
          "description": "StartedAt is the UTC timestamp of the moment the job started.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "StartedAt"
        },
        "status": {
          "$ref": "#/definitions/JobStatus"
        },
        "task_name": {
          "description": "TaskName is the name of the task to be executed.",
          "type": "string",
          "x-go-name": "TaskName"
        },
        "task_params": {
          "description": "TaskParams are the required parameters for the task assigned to the specific job.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "x-go-name": "TaskParams"
        },
        "timeout": {
          "description": "Timeout is the time in seconds after which the job task will be interrupted.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Timeout"
        },
        "use_previous_results": {
          "description": "UsePreviousResults indicates where the job should use the\nresults of the previous job in the pipeline or not.",
          "type": "boolean",
          "x-go-name": "UsePreviousResults"
        }
      },
      "x-go-package": "github.com/svaloumas/valet/internal/core/domain"
    },
    "JobResult": {
      "type": "object",
      "title": "JobResult contains the result of a job.",
      "properties": {
        "error": {
          "type": "string",
          "x-go-name": "Error"
        },
        "job_id": {
          "type": "string",
          "x-go-name": "JobID"
        },
        "metadata": {
          "type": "object",
          "x-go-name": "Metadata"
        }
      },
      "x-go-package": "github.com/svaloumas/valet/internal/core/domain"
    },
    "JobStatus": {
      "type": "integer",
      "format": "int64",
      "title": "JobStatus holds a value for job status ranging from 1 to 5.",
      "x-go-package": "github.com/svaloumas/valet/internal/core/domain"
    },
    "Pipeline": {
      "type": "object",
      "title": "Pipeline represents a sequence of async tasks.",
      "properties": {
        "completed_at": {
          "description": "CompletedAt is the UTC timestamp of the moment the pipeline finished.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CompletedAt"
        },
        "created_at": {
          "description": "CreatedAt is the UTC timestamp of the pipeline creation.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "description": {
          "description": "Description gives some information about the pipeline.",
          "type": "string",
          "x-go-name": "Description"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "id": {
          "description": "ID is the auto-generated pipeline identifier in UUID4 format.",
          "type": "string",
          "x-go-name": "ID"
        },
        "jobs": {
          "description": "Jobs represents the jobs included to this pipeline.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          },
          "x-go-name": "Jobs"
        },
        "name": {
          "description": "Name is the name of the pipeline.",
          "type": "string",
          "x-go-name": "Name"
        },
        "run_at": {
          "description": "RunAt is the UTC timestamp indicating the time for the pipeline to run.\nThis property will be propagated to the first job of the pipeline.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "RunAt"
        },
        "started_at": {
          "description": "StartedAt is the UTC timestamp of the moment the pipeline started.",
          "type": "string",
          "format": "date-time",
          "x-go-name": "StartedAt"
        },
        "status": {
          "$ref": "#/definitions/JobStatus"
        }
      },
      "x-go-package": "github.com/svaloumas/valet/internal/core/domain"
    },
    "RequestBodyDTO": {
      "type": "object",
      "title": "RequestBodyDTO is the data transfer object used for a job creation or update.",
      "properties": {
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestBodyDTO"
          },
          "x-go-name": "Jobs"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "run_at": {
          "type": "string",
          "x-go-name": "RunAt"
        }
      },
      "x-go-package": "github.com/svaloumas/valet/internal/handler/pipelinehdl"
    },
    "errResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "error": {
          "type": "boolean",
          "x-go-name": "Error"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/svaloumas/valet/doc/swagger"
    }
  },
  "responses": {
    "errorResponse": {
      "description": "The API error response body.",
      "schema": {
        "$ref": "#/definitions/errResponse"
      }
    },
    "getJobResponse": {
      "description": "The specified job's metadata.",
      "schema": {
        "$ref": "#/definitions/Job"
      }
    },
    "getJobResultsResponse": {
      "description": "Returns a specified job results.",
      "schema": {
        "$ref": "#/definitions/JobResult"
      }
    },
    "getJobsResponse": {
      "description": "The jobs metadata.",
      "schema": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Job"
            },
            "x-go-name": "Jobs"
          }
        }
      }
    },
    "getPipelineJobsResponse": {
      "description": "The pipeline jobs metadata.",
      "schema": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Job"
            },
            "x-go-name": "Jobs"
          }
        }
      }
    },
    "getPipelineResponse": {
      "description": "The specified pipeline's metadata.",
      "schema": {
        "$ref": "#/definitions/Pipeline"
      }
    },
    "getPipelinesResponse": {
      "description": "The pipelines metadata.",
      "schema": {
        "type": "object",
        "properties": {
          "pipelines": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Pipeline"
            },
            "x-go-name": "Pipelines"
          }
        }
      }
    },
    "postJobsResponse": {
      "description": "Returns the newly created job metadata.",
      "schema": {
        "$ref": "#/definitions/Job"
      }
    },
    "postPipelinesResponse": {
      "description": "Returns the newly created pipeline metadata.",
      "schema": {
        "$ref": "#/definitions/Pipeline"
      }
    }
  }
}